# GitHub Actions workflow to automate Terraform apply before APIM OpenAPI deployment

name: Infra and APIM Deploy Pipeline

on:
  push:
    paths:
      - 'infra/**'
      - 'sample-apis/*.yaml'
      - '.github/workflows/deploy-apim-mock.yaml'
    branches:
      - main

jobs:
  infrastructure-deployment:
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        working-directory: infra
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        env:
            TF_LOG: DEBUG
        run: |
            terraform init \
            -backend-config="resource_group_name=${{ secrets.AZURE_APIM_RESOURCE_GROUP }}" \
            -backend-config="storage_account_name=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}" \
            -backend-config="key=terraform.tfstate"

      - name: Terraform Apply
        env:
            TF_LOG: DEBUG
        run: terraform apply \
            -var="apim_name=${{ secrets.APIM_NAME }}" \
            -var="resource_group_name=${{ secrets.AZURE_APIM_RESOURCE_GROUP }}" \
            -var="location=${{ secrets.AZURE_LOCATION }}"

  azure-functions-deployment:
    needs: infrastructure-deployment
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd function
          npm install
          npm run build

      - name: Install Azure Functions Core Tools
        run: npm install -g azure-functions-core-tools@4 --unsafe-perm true

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Publish Azure Function
        run: |
          func azure functionapp publish $(terraform -chdir=infra output -raw function_app_name)

      - name: Logout from Azure
        run: az logout

  apim-deploy:
    needs: [infrastructure-deployment, azure-functions-deployment]
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Azure CLI
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy OpenAPI spec to APIM and enable mocking
        env:
          AZURE_APIM_RESOURCE_GROUP: ${{ secrets.AZURE_APIM_RESOURCE_GROUP }}
          AZURE_APIM_SERVICE_NAME: ${{ secrets.AZURE_APIM_SERVICE_NAME }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        run: |
          export AZURE_TOKEN=$(az account get-access-token --query accessToken -o tsv)
          for api_file in sample-apis/*.yaml; do
            api_name=$(basename "$api_file" .yaml)
            api_path="$api_name"
            openapi_content=$(python3 -c "import json,sys; print(json.dumps(open('$api_file').read()))")
            echo "Importing $api_file as $api_name to APIM via REST API..."
            curl -X POST \
              -H "Authorization: Bearer $AZURE_TOKEN" \
              -H "Content-Type: application/json" \
              "https://management.azure.com/subscriptions/$AZURE_SUBSCRIPTION_ID/resourceGroups/$AZURE_APIM_RESOURCE_GROUP/providers/Microsoft.ApiManagement/service/$AZURE_APIM_SERVICE_NAME/importOpenApi?api-version=2024-05-01" \
              -d "{\"properties\":{\"format\":\"openapi+yaml\",\"value\":$openapi_content,\"path\":\"$api_path\"}}"
            echo "Waiting for API to be available..."
            sleep 20
            for op in listPatients getPatientById; do
              curl -X PATCH \
                -H "Authorization: Bearer $AZURE_TOKEN" \
                -H "Content-Type: application/json" \
                "https://management.azure.com/subscriptions/$AZURE_SUBSCRIPTION_ID/resourceGroups/$AZURE_APIM_RESOURCE_GROUP/providers/Microsoft.ApiManagement/service/$AZURE_APIM_SERVICE_NAME/apis/$api_name/operations/$op?api-version=2024-05-01" \
                -d '{"properties":{"request":{"representations":[]},"responses":[{"representations":[{"contentType":"application/fhir+json","sample":"MOCK"}]}]}}'
            done
          done
        shell: bash

      - name: Logout from Azure
        run: az logout
