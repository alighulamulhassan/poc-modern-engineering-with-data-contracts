# GitHub Actions workflow to automate Terraform apply before APIM OpenAPI deployment

name: Infra and APIM Deploy Pipeline

on:
  push:
    paths:
      - 'infra/**'
      - 'sample-apis/*.yaml'
      - '.github/workflows/infra-apim-deploy.yaml'
    branches:
      - main

jobs:
  apim-deployment:
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        working-directory: infra
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        env:
            TF_LOG: INFO
        run: |
            terraform init \
            -backend-config="resource_group_name=${{ secrets.AZURE_APIM_RESOURCE_GROUP }}" \
            -backend-config="storage_account_name=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}" \
            -backend-config="key=terraform.tfstate"

      - name: Terraform Plan#
        env:
            TF_LOG: INFO
        run: |
          terraform plan \
            -var="apim_name=${{ secrets.AZURE_APIM_SERVICE_NAME }}" \
            -var="resource_group_name=${{ secrets.AZURE_APIM_RESOURCE_GROUP }}" \
            -var="location=${{ secrets.AZURE_LOCATION }}"

      - name: Terraform Apply
        env:
            TF_LOG: INFO
        run: |
          terraform apply -auto-approve \
            -var="apim_name=${{ secrets.AZURE_APIM_SERVICE_NAME }}" \
            -var="resource_group_name=${{ secrets.AZURE_APIM_RESOURCE_GROUP }}" \
            -var="location=${{ secrets.AZURE_LOCATION }}"

  apim-patch-mock-policies:
    name: Generate and apply mock response policies
    needs: apim-deployment
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        working-directory: infra
    env:
      AZURE_APIM_RESOURCE_GROUP: ${{ secrets.AZURE_APIM_RESOURCE_GROUP }}
      AZURE_APIM_SERVICE_NAME: ${{ secrets.AZURE_APIM_SERVICE_NAME }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install js-yaml @stoplight/prism-cli

      - name: Azure CLI login
        uses: azure/login@v2
        with:
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'

      - name: Generate and upload mock responses
        run: npm run generate-mocks

      - name: Logout from Azure
        run: az logout
